{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \"/* add css styles here (optional) */\\n\\n.styles_test__32Qsm {\\n  display: inline-block;\\n  margin: 2em auto;\\n  border: 2px solid #000;\\n  font-size: 2em;\\n}\\n\";\nstyleInject(css);\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n\nvar jsmeIsLoaded = false;\nvar jsmeCallbacks = {}; // Export the setup function so that a user can override the super-lazy loading behaviour and choose to load it more eagerly.\n\nfunction setup() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"https://jsme.cloud.douglasconnect.com/JSME_2017-02-26/jsme/jsme.nocache.js\";\n  var script = document.createElement('script');\n  script.src = src;\n  document.head.appendChild(script);\n\n  window.jsmeOnLoad = function () {\n    Object.values(jsmeCallbacks).forEach(function (f) {\n      return f();\n    });\n    jsmeIsLoaded = true;\n  };\n}\n\nvar Jsme = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Jsme, _React$PureComponent);\n\n  function Jsme(props) {\n    var _this;\n\n    _classCallCheck(this, Jsme);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Jsme).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleJsmeLoad\", function () {\n      if (_this.props.options) {\n        _this.jsmeApplet = new window.JSApplet.JSME(_this.id, _this.props.width, _this.props.height, {\n          options: _this.props.options\n        });\n      } else {\n        _this.jsmeApplet = new window.JSApplet.JSME(_this.id, _this.props.width, _this.props.height);\n      }\n\n      _this.jsmeApplet.setCallBack(\"AfterStructureModified\", _this.handleChange);\n\n      _this.jsmeApplet.readGenericMolecularInput(_this.props.smiles);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (jsmeEvent) {\n      if (_this.props.onChange) {\n        _this.props.onChange(jsmeEvent.src.smiles());\n      }\n    });\n\n    _this.myRef = React.createRef();\n    _this.id = \"jsme\" + getRandomInt(1, 100000);\n    return _this;\n  }\n\n  _createClass(Jsme, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (jsmeIsLoaded) {\n        this.handleJsmeLoad();\n      } else {\n        if (!window.jsmeOnLoad) {\n          setup(this.props.src);\n        }\n\n        jsmeCallbacks[this.id] = this.handleJsmeLoad;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      jsmeCallbacks[this.id] = undefined;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.jsmeApplet !== null) {\n        if (this.props.height !== prevProps.height || this.props.width !== prevProps.width) {\n          this.jsmeApplet.setSize(this.props.width, this.props.height);\n        }\n\n        if (this.props.options !== prevProps.options) {\n          this.jsmeApplet.options({\n            options: this.props.options\n          });\n        }\n\n        if (this.props.smiles !== prevProps.smiles) {\n          this.jsmeApplet.readGenericMolecularInput(this.props.smiles);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        ref: this.myRef,\n        id: this.id\n      });\n    }\n  }]);\n\n  return Jsme;\n}(React.PureComponent);\n\nJsme.propTypes = {\n  height: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  smiles: PropTypes.string,\n  options: PropTypes.string,\n  onChange: PropTypes.func,\n  src: PropTypes.string\n};\nexport { Jsme, setup };","map":{"version":3,"sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"names":["min","Math","max","jsmeIsLoaded","jsmeCallbacks","src","script","document","window","Object","f","Jsme","React","getRandomInt","options","jsmeEvent","setup","prevProps","id","height","PropTypes","width","smiles","onChange","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,WAAT,CAAqB,GAArB,EAA0B,GAA1B,EAA+B;AAC7B,MAAK,GAAG,KAAK,KAAK,CAAlB,EAAsB,GAAG,GAAG,EAAN;AACtB,MAAI,QAAQ,GAAG,GAAG,CAAC,QAAnB;;AAEA,MAAI,CAAC,GAAD,IAAQ,OAAO,QAAP,KAAoB,WAAhC,EAA6C;AAAE;AAAS;;AAExD,MAAI,IAAI,GAAG,QAAQ,CAAC,IAAT,IAAiB,QAAQ,CAAC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAA5B;AACA,MAAI,KAAK,GAAG,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAAZ;AACA,EAAA,KAAK,CAAC,IAAN,GAAa,UAAb;;AAEA,MAAI,QAAQ,KAAK,KAAjB,EAAwB;AACtB,QAAI,IAAI,CAAC,UAAT,EAAqB;AACnB,MAAA,IAAI,CAAC,YAAL,CAAkB,KAAlB,EAAyB,IAAI,CAAC,UAA9B;AACD,KAFD,MAEO;AACL,MAAA,IAAI,CAAC,WAAL,CAAiB,KAAjB;AACD;AACF,GAND,MAMO;AACL,IAAA,IAAI,CAAC,WAAL,CAAiB,KAAjB;AACD;;AAED,MAAI,KAAK,CAAC,UAAV,EAAsB;AACpB,IAAA,KAAK,CAAC,UAAN,CAAiB,OAAjB,GAA2B,GAA3B;AACD,GAFD,MAEO;AACL,IAAA,KAAK,CAAC,WAAN,CAAkB,QAAQ,CAAC,cAAT,CAAwB,GAAxB,CAAlB;AACD;AACH;;;;;ACrBA,SAAA,YAAA,CAAA,GAAA,EAAA,GAAA,EAAgC;AAC9BA,EAAAA,GAAG,GAAGC,IAAI,CAAJA,IAAAA,CAAND,GAAMC,CAAND;AACAE,EAAAA,GAAG,GAAGD,IAAI,CAAJA,KAAAA,CAANC,GAAMD,CAANC;AACA,SAAOD,IAAI,CAAJA,KAAAA,CAAWA,IAAI,CAAJA,MAAAA,MAAiBC,GAAG,GAA/BD,GAAWA,CAAXA,IAHuB,GAG9B,CAH8B,CAAA;AAI/B;;AAED,IAAIE,YAAY,GAAhB,KAAA;AACA,IAAMC,aAAa,GAAnB,EAAA,C,CAAA;;AAGO,SAAA,KAAA,GAAmG;AAAA,MAApFC,GAAoF,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA9E,4EAA8E;AACxG,MAAMC,MAAM,GAAGC,QAAQ,CAARA,aAAAA,CAAf,QAAeA,CAAf;AACAD,EAAAA,MAAM,CAANA,GAAAA,GAAAA,GAAAA;AACAC,EAAAA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAAAA,MAAAA;;AAEAC,EAAAA,MAAM,CAANA,UAAAA,GAAoB,YAAM;AACxBC,IAAAA,MAAM,CAANA,MAAAA,CAAAA,aAAAA,EAAAA,OAAAA,CACW,UAAA,CAAA,EAAC;AAAA,aAAIC,CAAJ,EAAA;AADZD,KAAAA;AAEAN,IAAAA,YAAY,GAAZA,IAAAA;AAHFK,GAAAA;AAKD;;AAED,IAAaG,IAAb,GAAA,aAAA,UAAA,oBAAA,EAAA;AAAA,EAAA,SAAA,CAAA,IAAA,EAAA,oBAAA,CAAA;;AACE,WAAA,IAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,IAAA,CAAA;;AACjB,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;AADiB,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,gBAAA,EAMF,YAAM;AACrB,UAAI,KAAA,CAAA,KAAA,CAAJ,OAAA,EAAwB;AACtB,QAAA,KAAA,CAAA,UAAA,GAAkB,IAAIH,MAAM,CAANA,QAAAA,CAAJ,IAAA,CAAyB,KAAA,CAAzB,EAAA,EAAkC,KAAA,CAAA,KAAA,CAAlC,KAAA,EAAoD,KAAA,CAAA,KAAA,CAApD,MAAA,EAAuE;AAAEM,UAAAA,OAAO,EAAE,KAAA,CAAA,KAAA,CAAWA;AAAtB,SAAvE,CAAlB;AADF,OAAA,MAGK;AACH,QAAA,KAAA,CAAA,UAAA,GAAkB,IAAIN,MAAM,CAANA,QAAAA,CAAJ,IAAA,CAAyB,KAAA,CAAzB,EAAA,EAAkC,KAAA,CAAA,KAAA,CAAlC,KAAA,EAAoD,KAAA,CAAA,KAAA,CAAtE,MAAkB,CAAlB;AACD;;AACD,MAAA,KAAA,CAAA,UAAA,CAAA,WAAA,CAAA,wBAAA,EAAsD,KAAA,CAAtD,YAAA;;AACA,MAAA,KAAA,CAAA,UAAA,CAAA,yBAAA,CAA0C,KAAA,CAAA,KAAA,CAA1C,MAAA;AAdiB,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,cAAA,EAiBJ,UAAA,SAAA,EAAe;AAC5B,UAAI,KAAA,CAAA,KAAA,CAAJ,QAAA,EAAyB;AACvB,QAAA,KAAA,CAAA,KAAA,CAAA,QAAA,CAAoBO,SAAS,CAATA,GAAAA,CAApB,MAAoBA,EAApB;AACD;AApBgB,KAAA,CAAA;;AAEjB,IAAA,KAAA,CAAA,KAAA,GAAaH,KAAK,CAAlB,SAAaA,EAAb;AACA,IAAA,KAAA,CAAA,EAAA,GAAU,SAASC,YAAY,CAAA,CAAA,EAA/B,MAA+B,CAA/B;AAHiB,WAAA,KAAA;AAIlB;;AALH,EAAA,YAAA,CAAA,IAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,mBAAA;AAAA,IAAA,KAAA,EAAA,SAAA,iBAAA,GAwBsB;AAClB,UAAA,YAAA,EAAkB;AAChB,aAAA,cAAA;AADF,OAAA,MAEO;AACL,YAAI,CAACL,MAAM,CAAX,UAAA,EAAwB;AACtBQ,UAAAA,KAAK,CAAC,KAAA,KAAA,CAANA,GAAK,CAALA;AACD;;AACDZ,QAAAA,aAAa,CAAC,KAAdA,EAAa,CAAbA,GAAyB,KAAzBA,cAAAA;AACD;AAEF;AAlCH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,sBAAA;AAAA,IAAA,KAAA,EAAA,SAAA,oBAAA,GAoCyB;AACrBA,MAAAA,aAAa,CAAC,KAAdA,EAAa,CAAbA,GAAAA,SAAAA;AACD;AAtCH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,oBAAA;AAAA,IAAA,KAAA,EAAA,SAAA,kBAAA,CAAA,SAAA,EAwCgC;AAC5B,UAAI,KAAA,UAAA,KAAJ,IAAA,EAA8B;AAC5B,YAAI,KAAA,KAAA,CAAA,MAAA,KAAsBa,SAAS,CAA/B,MAAA,IAA0C,KAAA,KAAA,CAAA,KAAA,KAAqBA,SAAS,CAA5E,KAAA,EAAoF;AAClF,eAAA,UAAA,CAAA,OAAA,CAAwB,KAAA,KAAA,CAAxB,KAAA,EAA0C,KAAA,KAAA,CAA1C,MAAA;AACD;;AACD,YAAI,KAAA,KAAA,CAAA,OAAA,KAAuBA,SAAS,CAApC,OAAA,EAA8C;AAC5C,eAAA,UAAA,CAAA,OAAA,CAAwB;AAACH,YAAAA,OAAO,EAAE,KAAA,KAAA,CAAWA;AAArB,WAAxB;AACD;;AACD,YAAI,KAAA,KAAA,CAAA,MAAA,KAAsBG,SAAS,CAAnC,MAAA,EAA4C;AAC1C,eAAA,UAAA,CAAA,yBAAA,CAA0C,KAAA,KAAA,CAA1C,MAAA;AACD;AACF;AACF;AApDH,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,QAAA;AAAA,IAAA,KAAA,EAAA,SAAA,MAAA,GAsDW;AACP,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,GAAG,EAAE,KAAV,KAAA;AAAsB,QAAA,EAAE,EAAE,KAAKC;AAA/B,OAAA,CAAP;AACD;AAxDH,GAAA,CAAA,CAAA;;AAAA,SAAA,IAAA;AAAA,CAAA,CAA0BN,KAAK,CAA/B,aAAA,CAAA;;AA2DAD,IAAI,CAAJA,SAAAA,GAAiB;AACfQ,EAAAA,MAAM,EAAEC,SAAS,CAATA,MAAAA,CADO,UAAA;AAEfC,EAAAA,KAAK,EAAED,SAAS,CAATA,MAAAA,CAFQ,UAAA;AAGfE,EAAAA,MAAM,EAAEF,SAAS,CAHF,MAAA;AAIfN,EAAAA,OAAO,EAAEM,SAAS,CAJH,MAAA;AAKfG,EAAAA,QAAQ,EAAEH,SAAS,CALJ,IAAA;AAMff,EAAAA,GAAG,EAAEe,SAAS,CAACI;AANA,CAAjBb","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react'\nimport styles from './styles.css'\nimport PropTypes from 'prop-types'\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min)) + min //The maximum is exclusive and the minimum is inclusive\n}\n\nlet jsmeIsLoaded = false;\nconst jsmeCallbacks = {};\n\n// Export the setup function so that a user can override the super-lazy loading behaviour and choose to load it more eagerly.\nexport function setup(src = \"https://jsme.cloud.douglasconnect.com/JSME_2017-02-26/jsme/jsme.nocache.js\") {\n  const script = document.createElement('script');\n  script.src = src;\n  document.head.appendChild(script);\n\n  window.jsmeOnLoad = () => {\n    Object.values(jsmeCallbacks)\n      .forEach(f => f());\n    jsmeIsLoaded = true;\n  }\n}\n\nexport class Jsme extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.myRef = React.createRef()\n    this.id = \"jsme\" + getRandomInt(1, 100000)\n  }\n\n  handleJsmeLoad = () => {\n    if (this.props.options) {\n      this.jsmeApplet = new window.JSApplet.JSME(this.id, this.props.width, this.props.height, { options: this.props.options } );\n    }\n    else {\n      this.jsmeApplet = new window.JSApplet.JSME(this.id, this.props.width, this.props.height);\n    }\n    this.jsmeApplet.setCallBack(\"AfterStructureModified\", this.handleChange);\n    this.jsmeApplet.readGenericMolecularInput(this.props.smiles)\n  }\n\n  handleChange = (jsmeEvent) => {\n    if (this.props.onChange) {\n      this.props.onChange(jsmeEvent.src.smiles())\n    }\n  }\n\n  componentDidMount() {\n    if (jsmeIsLoaded) {\n      this.handleJsmeLoad();\n    } else {\n      if (!window.jsmeOnLoad) {\n        setup(this.props.src);\n      }\n      jsmeCallbacks[this.id] = this.handleJsmeLoad;\n    }\n\n  }\n\n  componentWillUnmount() {\n    jsmeCallbacks[this.id] = undefined;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.jsmeApplet !== null) {\n      if (this.props.height !== prevProps.height || this.props.width !== prevProps.width) {\n        this.jsmeApplet.setSize(this.props.width, this.props.height)\n      }\n      if (this.props.options !== prevProps.options) {\n        this.jsmeApplet.options({options: this.props.options})\n      }\n      if (this.props.smiles !== prevProps.smiles) {\n        this.jsmeApplet.readGenericMolecularInput(this.props.smiles)\n      }\n    }\n  }\n\n  render() {\n    return <div ref={this.myRef} id={this.id}></div>\n  }\n}\n\nJsme.propTypes = {\n  height: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  smiles: PropTypes.string,\n  options: PropTypes.string,\n  onChange: PropTypes.func,\n  src: PropTypes.string,\n}\n"]},"metadata":{},"sourceType":"module"}