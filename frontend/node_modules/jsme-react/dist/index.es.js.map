{"version":3,"file":"index.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react'\nimport styles from './styles.css'\nimport PropTypes from 'prop-types'\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min)) + min //The maximum is exclusive and the minimum is inclusive\n}\n\nlet jsmeIsLoaded = false;\nconst jsmeCallbacks = {};\n\n// Export the setup function so that a user can override the super-lazy loading behaviour and choose to load it more eagerly.\nexport function setup(src = \"https://jsme.cloud.douglasconnect.com/JSME_2017-02-26/jsme/jsme.nocache.js\") {\n  const script = document.createElement('script');\n  script.src = src;\n  document.head.appendChild(script);\n\n  window.jsmeOnLoad = () => {\n    Object.values(jsmeCallbacks)\n      .forEach(f => f());\n    jsmeIsLoaded = true;\n  }\n}\n\nexport class Jsme extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.myRef = React.createRef()\n    this.id = \"jsme\" + getRandomInt(1, 100000)\n  }\n\n  handleJsmeLoad = () => {\n    if (this.props.options) {\n      this.jsmeApplet = new window.JSApplet.JSME(this.id, this.props.width, this.props.height, { options: this.props.options } );\n    }\n    else {\n      this.jsmeApplet = new window.JSApplet.JSME(this.id, this.props.width, this.props.height);\n    }\n    this.jsmeApplet.setCallBack(\"AfterStructureModified\", this.handleChange);\n    this.jsmeApplet.readGenericMolecularInput(this.props.smiles)\n  }\n\n  handleChange = (jsmeEvent) => {\n    if (this.props.onChange) {\n      this.props.onChange(jsmeEvent.src.smiles())\n    }\n  }\n\n  componentDidMount() {\n    if (jsmeIsLoaded) {\n      this.handleJsmeLoad();\n    } else {\n      if (!window.jsmeOnLoad) {\n        setup(this.props.src);\n      }\n      jsmeCallbacks[this.id] = this.handleJsmeLoad;\n    }\n\n  }\n\n  componentWillUnmount() {\n    jsmeCallbacks[this.id] = undefined;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.jsmeApplet !== null) {\n      if (this.props.height !== prevProps.height || this.props.width !== prevProps.width) {\n        this.jsmeApplet.setSize(this.props.width, this.props.height)\n      }\n      if (this.props.options !== prevProps.options) {\n        this.jsmeApplet.options({options: this.props.options})\n      }\n      if (this.props.smiles !== prevProps.smiles) {\n        this.jsmeApplet.readGenericMolecularInput(this.props.smiles)\n      }\n    }\n  }\n\n  render() {\n    return <div ref={this.myRef} id={this.id}></div>\n  }\n}\n\nJsme.propTypes = {\n  height: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  smiles: PropTypes.string,\n  options: PropTypes.string,\n  onChange: PropTypes.func,\n  src: PropTypes.string,\n}\n"],"names":["getRandomInt","min","max","Math","ceil","floor","random","jsmeIsLoaded","jsmeCallbacks","setup","src","script","document","createElement","head","appendChild","window","jsmeOnLoad","Object","values","forEach","f","Jsme","props","options","jsmeApplet","JSApplet","JSME","id","width","height","setCallBack","handleChange","readGenericMolecularInput","smiles","jsmeEvent","onChange","myRef","React","createRef","handleJsmeLoad","undefined","prevProps","setSize","PureComponent","propTypes","PropTypes","string","isRequired","func"],"mappings":"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"}